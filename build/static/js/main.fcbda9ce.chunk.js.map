{"version":3,"sources":["components/Input.js","components/List.js","components/ToDoList.js","index.js"],"names":["Input","props","e","this","handleChange","className","value","inpValue","type","onChange","bind","onClick","addTodo","Component","List","renderTodos","done","todos","map","todo","idx","toggle","checked","dangerouslySetInnerHTML","__html","title","delTodo","React","ToDoList","setState","target","state","filter","item","index","newTodos","JSON","parse","stringify","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"6KAEqBA,E,kDACjB,WAAYC,GAAO,uCACTA,G,yDAGGC,GACTC,KAAKF,MAAMG,aAAaF,K,+BAGxB,OACI,yBAAKG,UAAU,OACX,2BAAOC,MAAOH,KAAKF,MAAMM,SAAUC,KAAK,OAAOC,SAAUN,KAAKC,aAAaM,KAAKP,QAChF,4BAAQQ,QAASR,KAAKF,MAAMW,SAA5B,qB,GAZmBC,aCDdC,E,kDACjB,WAAYb,GAAO,IAAD,8BACd,cAAMA,IAGVc,YAAY,SAACC,GACT,OAAO,EAAKf,MAAMgB,MAAMC,KAAI,SAACC,EAAKC,GAC9B,GAAGJ,GAAMG,EAAKH,KACd,OAAO,4BACH,2BACAL,QAAS,kBAAI,EAAKV,MAAMoB,OAAOD,IAC/BZ,KAAK,WAAWc,QAASN,IACzB,0BAAMO,wBAAyB,CAACC,OAAOL,EAAKM,SAC5C,4BAAQd,QAAS,kBAAI,EAAKV,MAAMyB,QAAQN,KAAxC,qBAZM,E,qDAoBd,OACI,6BACI,wDACA,4BACKjB,KAAKY,aAAY,IAEtB,wDACA,4BACKZ,KAAKY,aAAY,S,GA7BJY,IAAMd,WCkEzBe,E,kDA7DX,aAAc,IAAD,8BACT,gBAMJxB,aAAa,SAACF,GAEV,EAAK2B,SAAS,CAACtB,SAASL,EAAE4B,OAAOxB,SATxB,EAwBbM,QAAQ,WACoB,IAArB,EAAKmB,MAAMxB,WACV,EAAKsB,SAAS,CACVZ,MAAM,CACN,CACIQ,MAAM,EAAKM,MAAMxB,SACjBS,MAAK,IAHJ,mBAKF,EAAKe,MAAMd,UAIlB,EAAKY,SAAS,CAACtB,SAAS,OApCnB,EAuCbmB,QAAQ,SAACN,GACL,EAAKS,SAAS,CACVZ,MAAM,EAAKc,MAAMd,MAAMe,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOd,QAzC9C,EA4CbC,OAAO,SAACa,GACJ,IAAIC,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKP,MAAMd,QAClDkB,EAASD,GAAOlB,MAAMmB,EAASD,GAAOlB,KACtC,EAAKa,SAAS,CACVZ,MAAMkB,KA9CV,EAAKJ,MAAM,CACPxB,SAAS,GACTU,MAAM,IAJD,E,gEAcT,IAAIA,EAAMsB,aAAaC,QAAQ,SAC5BvB,GACCd,KAAK0B,SAAS,CACVZ,MAAMmB,KAAKC,MAAMpB,O,2CAKzBsB,aAAaE,QAAQ,QAAQL,KAAKE,UAAUnC,KAAK4B,MAAMd,U,+BA+BvD,OACI,yBAAKZ,UAAU,OACX,kBAAC,EAAD,CAAOE,SAAUJ,KAAK4B,MAAMxB,SAAUH,aAAcD,KAAKC,aAAcQ,QAAST,KAAKS,UACrF,kBAAC,EAAD,CAAMc,QAASvB,KAAKuB,QAASL,OAAQlB,KAAKkB,OAAQJ,MAAOd,KAAK4B,MAAMd,a,GAzD7DJ,aCAvB6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fcbda9ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    } \r\n    \r\n    handleChange(e){\r\n        this.props.handleChange(e);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <input value={this.props.inpValue} type='text' onChange={this.handleChange.bind(this)}/>\r\n                <button onClick={this.props.addTodo}>添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  React from 'react';\r\nexport default class List extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    renderTodos=(done)=>{\r\n        return this.props.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n            return <li>\r\n                <input \r\n                onClick={()=>this.props.toggle(idx)}\r\n                type=\"checkbox\" checked={done}/>\r\n                <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                <button onClick={()=>this.props.delTodo(idx)}>删除</button>\r\n            </li>\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    render(){ \r\n        return(\r\n            <div>\r\n                <h1>正在进行</h1>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h1>已经完成</h1>\r\n                <ul>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from './Input';\r\nimport List from './List';\r\n\r\n\r\nclass ToDoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={ \r\n            inpValue:'',\r\n            todos:[]\r\n        }\r\n    } \r\n    handleChange=(e)=>{\r\n        //使用setData进行输入数据的更新\r\n        this.setState({inpValue:e.target.value});\r\n\r\n    }\r\n    componentDidMount() {\r\n        // this.input.focus();\r\n        let todos=localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos))\r\n    }\r\n    addTodo=()=>{\r\n        if(this.state.inpValue!=''){\r\n            this.setState({\r\n                todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false,\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n            })\r\n            //输入框中的值每次输完就清空\r\n            this.setState({inpValue:''});\r\n        }\r\n    }\r\n    delTodo=(idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        })\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done=!newTodos[index].done\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className='box'>\r\n                <Input inpValue={this.state.inpValue} handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                <List delTodo={this.delTodo} toggle={this.toggle} todos={this.state.todos}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ToDoList","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ToDoList from './components/ToDoList'\r\n\r\n\r\nReactDOM.render(\r\n  <ToDoList />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}